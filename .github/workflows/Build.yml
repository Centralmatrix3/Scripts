name: Build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0,12 * * *"

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      TZ: "Asia/Shanghai"
      SING_BOX_VERSION: "1.12.9"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5.0.0
        with:
          repository: Centralmatrix3/Scripts
          path: Scripts-repo
          ref: master

      - name: Build
        run: |
          curl -fsSL -o "Build.py" "https://raw.githubusercontent.com/Centralmatrix3/Scripts/master/Source/Build.py"
          curl -fsSL -o "Build.sh" "https://raw.githubusercontent.com/Centralmatrix3/Scripts/master/Source/Build.sh"
          bash "Build.sh"
          for file in Scripts-repo/Ruleset/*.list Scripts-repo/*/Ruleset/*.{list,yaml}; do
            [ ! -f "$file" ] && echo "$file not found." && continue
            python "Build.py" Surge "$file"
          done

      - name: QuantumultX
        run: |
          for file in Scripts-repo/QuantumultX/Ruleset/*.list; do
            [ ! -f "$file" ] && echo "$file not found." && continue
            rule_names="$(basename "$file" .list)"
            rule_count="$(wc -l < "$file")"
            python "Build.py" QuantumultX "$file"
            tmpfile="$(mktemp)"
            { echo "# 规则名称: $rule_names"
              echo "# 规则统计: $rule_count"
              echo
              cat "$file"
            } > "$tmpfile" && mv "$tmpfile" "$file"
          done

      - name: Stash
        run: |
          for file in Scripts-repo/Stash/Ruleset/*.yaml; do
            [ ! -f "$file" ] && echo "$file not found." && continue
            rule_names="$(basename "$file" .yaml)"
            rule_count="$(wc -l < "$file")"
            python "Build.py" Stash "$file"
            tmpfile="$(mktemp)"
            { echo "# 规则名称: $rule_names"
              echo "# 规则统计: $rule_count"
              echo
              cat "$file"
            } > "$tmpfile" && mv "$tmpfile" "$file"
          done

      - name: Surge
        run: |
          for file in Scripts-repo/{Ruleset,Surge/Ruleset}/*.list; do
            [ ! -f "$file" ] && echo "$file not found." && continue
            rule_names="$(basename "$file" .list)"
            rule_count="$(wc -l < "$file")"
            tmpfile="$(mktemp)"
            { echo "# 规则名称: $rule_names"
              echo "# 规则统计: $rule_count"
              echo
              cat "$file"
            } > "$tmpfile" && mv "$tmpfile" "$file"
          done

      - name: Push Update
        run: |
          cd Scripts-repo
          if [[ -n $(git status -s) ]]; then
            git config --local user.email "${{ github.actor }}@users.noreply.github.com"
            git config --local user.name "${{ github.actor }}"
            git add -A
            git commit -m "$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"
            git pull --rebase origin master
            git push origin HEAD:master
          else
            echo "No Repository Update Detected."
          fi

      - name: Cleanup Workflow
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 2